const availableTimes = {
    '2024-03-29': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-01': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-02': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-03': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-04': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-05': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-06': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-07': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-08': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-09': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-10': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-11': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-12': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-13': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-14': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-15': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-16': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-17': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-18': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-19': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
    '2024-04-20': ['17:00', '18:00', '19:00', '20:00', '21:00', '22:00'],
  };


  export const fetchAPI = (date) => {
    return new Promise((resolve, reject) => {
        setTimeout(() =>{
            if(availableTimes[date]){
                resolve(availableTimes[date])
            }
            else{
                resolve([]);
            }
        } , 1000)
    })
  }

  export const submitAPI = (formData) => {
    
    availableTimes[formData.date] = availableTimes[formData.date].filter(time => time !== formData.time);

    return new Promise((resolve, reject) => {
      setTimeout(() => {
        if (formData) {
          resolve(true); // Simulate successful submission
        } else {
          reject(new Error('Form submission failed.'));
        }
      }, 1000); // Simulate API delay
    });
  };



